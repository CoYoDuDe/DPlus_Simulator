#!/usr/bin/env bash
set -euo pipefail

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="${SCRIPT_DIR}"
INSTALL_ROOT="${INSTALL_ROOT:-/opt/dplus_sim}"
SETTINGS_PATH="${SETTINGS_PATH:-/etc/dplus_sim/settings.json}"
SERVICE_NAME="com.coyodude.dplussim"
SERVICE_SOURCE_DIR="${PROJECT_ROOT}/services/${SERVICE_NAME}"
HELPER_RESOURCE="/data/SetupHelper/HelperResources/forSetupScript"

log() {
  local level="$1"
  shift
  printf '[%s] %s\n' "${level}" "$*"
}

copy_tree() {
  local src="$1"
  local dest="$2"
  mkdir -p "${dest}"
  if command -v rsync >/dev/null 2>&1; then
    rsync -a --delete "${src}/" "${dest}/"
  else
    tar -C "${src}" -cf - . | tar -C "${dest}" -xf -
  fi
}

ensure_settings() {
  local config_path="$1"
  if [[ -f "${config_path}" ]]; then
    return
  fi
  mkdir -p "$(dirname "${config_path}")"
  log INFO "Erzeuge Standard-Konfiguration unter ${config_path}"
  python3 "${INSTALL_ROOT}/src/dplus_sim.py" --config "${config_path}" --write-defaults --dry-run
}

source_setup_helper() {
  if [[ ! -r "${HELPER_RESOURCE}" ]]; then
    log ERROR "SetupHelper-Ressource ${HELPER_RESOURCE} nicht gefunden"
    exit 1
  fi
  # shellcheck disable=SC1090
  source "${HELPER_RESOURCE}"

  local required=(helper_begin helper_install_service helper_register_settings helper_end)
  local missing=()
  for fn in "${required[@]}"; do
    if ! declare -F "${fn}" >/dev/null; then
      missing+=("${fn}")
    fi
  done
  if (( ${#missing[@]} > 0 )); then
    log ERROR "SetupHelper stellt folgende Funktionen nicht bereit: ${missing[*]}"
    exit 1
  fi
}

perform_install() {
  log INFO "Starte Installation in ${INSTALL_ROOT}"
  mkdir -p "${INSTALL_ROOT}"

  source_setup_helper

  copy_tree "${PROJECT_ROOT}/src" "${INSTALL_ROOT}/src"
  copy_tree "${PROJECT_ROOT}/services" "${INSTALL_ROOT}/services"

  install -m 644 "${PROJECT_ROOT}/src/settings_schema.json" "${INSTALL_ROOT}/settings_schema.json"
  install -m 644 "${PROJECT_ROOT}/version" "${INSTALL_ROOT}/version"
  install -m 644 "${PROJECT_ROOT}/packageDependencies" "${INSTALL_ROOT}/packageDependencies"
  install -m 644 "${PROJECT_ROOT}/gitHubInfo" "${INSTALL_ROOT}/gitHubInfo"
  install -m 644 "${PROJECT_ROOT}/settingsList" "${INSTALL_ROOT}/settingsList"

  if [[ -d "${PROJECT_ROOT}/FileSets" ]]; then
    copy_tree "${PROJECT_ROOT}/FileSets" "${INSTALL_ROOT}/FileSets"
  fi

  ensure_settings "${SETTINGS_PATH}"

  helper_begin
  helper_install_service "${SERVICE_NAME}" "${SERVICE_SOURCE_DIR}"
  helper_register_settings "${PROJECT_ROOT}/settingsList" "${SETTINGS_PATH}"
  helper_end

  log INFO "Installation abgeschlossen"
}

perform_install
